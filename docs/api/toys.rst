toys
==================================================
.. automodule:: toys


Core protocols
--------------------------------------------------

The core protocols are pure abstract classes. They provide no functionality and are for documentation purpose only. There is no requirement to subclass them; however doing so provides certain runtime protections through Python's abstract base class (:mod:`abc`) functionality.

.. autosummary::
	:toctree: stubs

	Dataset
	Estimator
	Model
	Metric


Common classes
--------------------------------------------------

.. autosummary::
	:toctree: stubs

	BaseEstimator
	TunedEstimator
	TorchModel


Dataset utilities
--------------------------------------------------

.. autosummary::
	:toctree: stubs

	toys.batches
	toys.zip
	toys.concat
	toys.flatten
	toys.subset
	toys.shape


Type aliases
--------------------------------------------------

These type aliases exist to aid in documentation and static analysis. They are irrelevant at runtime.

.. class:: toys.ArrayShape
 	:annotation: =Tuple[int, ...]

	The shape of an array.

	>>> a = np.arange(20).reshape(5, 4)
	>>> a
	array([[ 0,  1,  2,  3],
			 [ 4,  5,  6,  7],
			 [ 8,  9, 10, 11],
			 [12, 13, 14, 15],
			 [16, 17, 18, 19]])
	>>> np.shape(a)
	(5, 4)

.. class:: toys.VariableArrayShape
 	:annotation: =Tuple[Optional[int], ...]

	An :class:`ArrayShape` where values can be :obj:`None` to indicate a variable size.

.. class:: toys.DatasetShape
 	:annotation: =Optional[Tuple[Optional[VariableArrayShape], ...]]

	The shape of a dataset is the sequence of (possibly variable) shapes of its columns. A column's shape may be :obj:`None` to indicate that the number of dimensions in that column is variable. The entire dataset shape may be :obj:`None` to indicate that the number of columns is variable.

.. class:: Fold
 	:annotation: =Tuple[Dataset, Dataset]

	A fold is the partitioning of the dataset into two disjoint subsets, ``(train, test)``. Folds are generated by cross validation splitters.

.. class:: CrossValSplitter
 	:annotation: =Callable[[Dataset], Iterable[Fold]]

	A cross validation splitter is a function that takes a dataset and returns an iterable over folds of the dataset to be used by (meta-)estimators, like :class:`~toys.model_selection.GridSearchCV`.

.. class:: ParamGrid
 	:annotation: =Mapping[str, Sequence]
